server {
  listen      80;
  server_name _;

  charset     utf-8;

  root        /var/www/html/public;
  index       index.php;

  access_log  /var/www/logs/nginx/access.log;
  error_log   /var/www/logs/nginx/error.log;

  include     /var/www/configs/nginx/host.conf;

	# Block access to ProcessWire system files
	location ~ \.(inc|info|module|sh|sql)$ {
		deny all;
	}

	# Block access to any file or directory that begins with a period
	location ~ /\. {
		deny all;
	}

	# Block access to protected assets directories
	location ~ ^/(site|site-[^/]+)/assets/(cache|logs|backups|sessions|config|install|tmp)($|/.*$) {
		deny all;
	}

	# Block acceess to the /site/install/ directory
	location ~ ^/(site|site-[^/]+)/install($|/.*$) {
		deny all;
	}

	# Block dirs in /site/assets/ dirs that start with a hyphen
	location ~ ^/(site|site-[^/]+)/assets.*/-.+/.* {
		deny all;
	}

	# Block access to /wire/config.php, /site/config.php, /site/config-dev.php, and /wire/index.config.php
	location ~ ^/(wire|site|site-[^/]+)/(config|index\.config|config-dev)\.php$ {
		deny all;
	}

	# Block access to any PHP-based files in /templates-admin/
	location ~ ^/(wire|site|site-[^/]+)/templates-admin($|/|/.*\.(php|html?|tpl|inc))$ {
		deny all;
	}

	# Block access to any PHP or markup files in /site/templates/
	location ~ ^/(site|site-[^/]+)/templates($|/|/.*\.(php|html?|tpl|inc))$ {
		deny all;
	}

	# Block access to any PHP files in /site/assets/
	location ~ ^/(site|site-[^/]+)/assets($|/|/.*\.php)$ {
		deny all;
	}

	# Block access to any PHP files in core or core module directories
	location ~ ^/wire/(core|modules)/.*\.(php|inc|tpl|module)$ {
		deny all;
	}

	# Block access to any PHP files in /site/modules/
	location ~ ^/(site|site-[^/]+)/modules/.*\.(php|inc|tpl|module)$ {
		deny all;
	}

	# Block access to any software identifying txt files
	location ~ ^/(COPYRIGHT|INSTALL|README|htaccess)\.(txt|md)$ {
		deny all;
	}

	location = /favicon.ico {
    log_not_found off;
    access_log off;
  }

  location = /robots.txt  {
    access_log off;
    log_not_found off;
  }

	location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|eot|woff|ttf)$ {
		expires 24h;
		log_not_found off;
		access_log off;
		try_files $uri $uri/ /index.php?it=$uri&$args;
	}

	location / {
		try_files $uri $uri/ /index.php?it=$uri&$args;
	}

	location /doc/ {
		deny all;
	}

  location ~ \.php$ {
    # regex to split $uri to $fastcgi_script_name and $fastcgi_path
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    # Check that the PHP script exists before passing it
    try_files       $fastcgi_script_name  =404;

    # Bypass the fact that try_files resets $fastcgi_path_info
    # see: http://trac.nginx.org/nginx/ticket/321
    set             $path_info            $fastcgi_path_info;
    fastcgi_param   PATH_INFO             $path_info;

    fastcgi_index   index.php;
    fastcgi_param   SCRIPT_FILENAME       $document_root$fastcgi_script_name;
    fastcgi_param   QUERY_STRING          $query_string;
    fastcgi_param   REQUEST_METHOD        $request_method;
    fastcgi_param   CONTENT_TYPE          $content_type;
    fastcgi_param   CONTENT_LENGTH        $content_length;

    fastcgi_param   SCRIPT_NAME           $fastcgi_script_name;
    fastcgi_param   REQUEST_URI           $request_uri;
    fastcgi_param   DOCUMENT_URI          $document_uri;
    fastcgi_param   DOCUMENT_ROOT         $document_root;
    fastcgi_param   SERVER_PROTOCOL       $server_protocol;
    fastcgi_param   REQUEST_SCHEME        $scheme;
    fastcgi_param   HTTPS                 $https if_not_empty;

    fastcgi_param   GATEWAY_INTERFACE     CGI/1.1;
    fastcgi_param   SERVER_SOFTWARE       nginx/$nginx_version;

    fastcgi_param   REMOTE_ADDR           $remote_addr;
    fastcgi_param   REMOTE_PORT           $remote_port;
    fastcgi_param   SERVER_ADDR           $server_addr;
    fastcgi_param   SERVER_PORT           $server_port;
    fastcgi_param   SERVER_NAME           $server_name;

    # PHP only, required if PHP was built with --enable-force-cgi-redirect
    fastcgi_param   REDIRECT_STATUS       200;

    # With php-cgi (or other tcp sockets):
    fastcgi_pass    php:9000;
  }

}
